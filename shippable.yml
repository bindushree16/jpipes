resources:
  - name: sample_scriptrepo
    type: gitRepo
    repoPath: jpline/sample-script
    configuration:
      integrationName: github
      branches:
        only: pipe
    initialVersion:
      sha: master
      
  - name: imageDocker
    type: image
    imageName: shippabledocker/sample-node
    configuration:
      integrationName: dockerInt
    initialVersion:
      imageTag: latest
 
pipelines:
  - name: pipeline1
    steps:  
      - name: testJob1
        type: bash
        setup:
          environmentVariables:
            normal:
              ENV1: value1
              ENV3: value3
              STEP_TYPE: update
              PIPELINE_NAME: update
              STEP_NAME: update
         #     RUNNING_IN_CONTAINER: container #this throw error when i update this
            secure:
              ENV2: EpEMlpUSs85U6Y5WmsV5xXUr/GkDpuKP0qH6yy4qPoTbZUSRwmIwWhez+bNSmDJe7lkZN1+syxU1LFmt09QqtSVQpy69brIW1L6vLaHVtBn7hcYGC3dJhmvXUYn/ohpasFj/sab6lwXHQSs+nRYyFRF+ICRzoTB6M17JW/KoLpqJrLL1hBYC1gPSXuWgJT/ZqKWcg+GWhCZT1o9L6IrHrgaMYR3aSmWwGAZoUBWGuTw7/datT6NDhxD6nX64dRdcR+4X0yRnTLPzbxqiMC9qTBw4ChIw5CenyH0tE/AF6YlhoavkyyRBkgd18AQKVNpQneaRN7htnIe+fLEsbKEkwQ==
        triggeredBy:
          resources:
            - sample_scriptrepo
          integrations:
            - dockerInt
        runtime:            
          type: image
          image:
            custom:
              name: drydock/u16all
              tag: v7.2.4
              options: 'privileged: true'
        execution:
          onExecute:
            - printenv
            - echo "hello!"
            - echo "ENV1=$ENV1"
            - echo "ENV2=$ENV2"
            - echo "ENV3=$ENV3"
            - echo "STEP_TYPE=$STEP_TYPE"
            - echo "PIPELINE_NAME=$PIPELINE_NAME"
            - echo "STEP_NAME=$STEP_NAME"
          #  - echo "RUNNING_IN_CONTAINER=$RUNNING_IN_CONTAINER"
          onSuccess:
            - echo "ENV1=$ENV1"
            - echo "ENV2=$ENV2"
            - echo "ENV3=$ENV3"
          onComplete:
            - echo "ENV1=$ENV1"
            - echo "ENV2=$ENV2"
            - echo "ENV3=$ENV3"
            - echo "STEP_TYPE=$STEP_TYPE"
            - echo "PIPELINE_NAME=$PIPELINE_NAME"
            - echo "STEP_NAME=$STEP_NAME"
          onStart:
            - echo "ENV1=$ENV1"
            - echo "ENV2=$ENV2"
            - echo "ENV3=$ENV3"
          onFailure:
            - echo "ENV1=$ENV1"
            - echo "ENV2=$ENV2"
            - echo "ENV3=$ENV3"
          onCancel:
            - echo "ENV1=$ENV1"
            - echo "ENV2=$ENV2"
            - echo "ENV3=$ENV3"
            
      - name: step_2
        type: bash
        triggeredBy:
          resources:
            - imageDocker
        execution:
          onExecute:
            - printenv
            - test "$key1" == "value1"
            - test "$key2" == "value2"
            - test "$key3" == "value3" 
            - echo "STEP_TYPE=$STEP_TYPE"
            - echo "PIPELINE_NAME=$PIPELINE_NAME"
            - echo "STEP_NAME=$STEP_NAME"
            
      - name: step_3
        type: bash
        configuration:
          priority: 4
        triggeredBy:
          steps:
            - testJob1
        execution:
          onExecute:
            - echo "ENV1=$ENV1"
            - echo "ENV2=$ENV2"
            - echo "ENV3=$ENV3"
            - echo "STEP_TYPE=$STEP_TYPE"
            - echo "PIPELINE_NAME=$PIPELINE_NAME"
            - echo "STEP_NAME=$STEP_NAME"
            
      - name: step_4
        type: bash
        configuration:
          priority: 5
        triggeredBy:
          steps:
            - testJob1
        execution:
          onExecute:
            - echo "ENV1=$ENV1"
            - echo "ENV2=$ENV2"
            - echo "ENV3=$ENV3"
            - echo "STEP_TYPE=$STEP_TYPE"
            - echo "PIPELINE_NAME=$PIPELINE_NAME"
            - echo "STEP_NAME=$STEP_NAME"
            
  - name: pipeline2
    steps:    
      - name: step_pl2
        type: bash
        configuration:
          priority: 1
        triggeredBy:
          resources:
            - sample_scriptrepo
        execution:
          onExecute:
            - printenv
